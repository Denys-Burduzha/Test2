{"version":3,"file":"static/js/780.fc5159b9.chunk.js","mappings":"mOAQaA,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAASJ,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACMC,ECPiB,SAACP,EAAOQ,GAC/B,OAA4CJ,EAAAA,EAAAA,UAASJ,GAArD,eAAOS,EAAP,KAAuBC,EAAvB,KACMC,GAAaC,EAAAA,EAAAA,QAAO,MAY1B,OAVAC,EAAAA,EAAAA,YAAU,WAKN,OAJAF,EAAWG,QAAUC,YAAW,WAC9BL,EAAkBV,EACnB,GAAEQ,GAEI,WACHQ,aAAaL,EAAWG,QAC3B,CACJ,GAAE,CAACd,EAAOQ,IAEJC,CAEV,CDTgCQ,CAAYZ,EALpB,KAkBrB,OAXAQ,EAAAA,EAAAA,YAAU,WACN,IAAKN,EAIH,OAHAL,EAAagB,OAAO,cACpBf,EAAgBD,GAIlBC,EAAgB,CAAEH,MAAOO,GAC5B,GAAE,CAACL,EAAcK,EAAsBJ,KAIpC,kBACEgB,YAAY,0BACZC,SAAU,SAACC,GAAD,OAAOf,EAAee,EAAEC,OAAOC,MAA/B,EACVA,MAAOlB,GAGhB,E,SE9BD,GAAgB,UAAY,6BAA6B,gBAAkB,mCAAmC,kBAAoB,sCCwBlI,EAnBkB,SAAC,GAAgC,IAA9BmB,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClC,GAAgCtB,EAAAA,EAAAA,UAAQ,OAACoB,QAAD,IAACA,GAAAA,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,gBAAKC,UAAWC,EAAAA,UAAhB,UACE,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,iBACED,UAAWC,EAAAA,gBACXC,QAAS,kBAAMH,GAAaD,EAAnB,EAFX,WAIE,yBAAMF,KACN,yBAAME,EAAW,IAAM,SAExBA,IAAY,gBAAKE,UAAWC,EAAAA,kBAAhB,SAAsCJ,QAI1D,ECgBC,EA7BsB,WAAO,IAAD,IAC1B,GAAuBzB,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAO4B,EAAP,KAAcC,EAAd,KAEMC,EAAY,WADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBF,aAE/BlC,EAAK,UAAGE,EAAamC,IAAI,gBAApB,QAAgC,GAM3C,OAJAxB,EAAAA,EAAAA,YAAU,WACRyB,EAAAA,GAAyBtC,GAAOuC,KAAKN,EACtC,GAAE,CAACjC,KAGF,iCACE,SAAC,EAAD,CACEyB,MAAO,0BACPC,SAAS,SAAC3B,EAAD,CAAaC,MAAOA,IAC7BwB,OAAQU,KAGV,wBACGF,EAAMQ,KAAI,SAACC,GAAD,OACT,wBAAmBA,EAAKhB,OAAfgB,EAAKC,GADL,QAMlB,C","sources":["components/GiphsSearch/GiphsSearch.jsx","hooks/useDebounse.jsx","webpack://goit-react-hw-05-movies/./src/components/Accordion/Accordion.module.css?c961","components/Accordion/Accordion.jsx","pages/SearchGiphsPage/SearchGiphsPage.jsx"],"sourcesContent":["\n\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useDebounce } from \"../../hooks/useDebounse\"\n\nconst DEBOUNCE_TIME_MS = 500;\n\nexport const GiphsSearch = ({ query }) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchQuery, setSearchQuery] = useState(query);\n    const debouncedSearchQuery = useDebounce(searchQuery, DEBOUNCE_TIME_MS);\n\n    useEffect(() => {\n        if (!debouncedSearchQuery) {\n          searchParams.delete(\"query\");\n          setSearchParams(searchParams);\n    \n          return;\n        }\n        setSearchParams({ query: debouncedSearchQuery });\n    }, [searchParams, debouncedSearchQuery, setSearchParams]);\n\n\n    return (\n        <input\n          placeholder=\"Enter your search query\"\n          onChange={(e) => setSearchQuery(e.target.value)}\n          value={searchQuery}\n        />\n    );\n};","\n\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const useDebounce = (query, debounceTime) => {\n    const [debouncedQuery, setDebouncedQuery] = useState(query);\n    const timeoutRef = useRef(null);\n\n    useEffect(() => {\n        timeoutRef.current = setTimeout(() => {\n          setDebouncedQuery(query);\n        }, debounceTime);\n\n        return () => {\n            clearTimeout(timeoutRef.current);\n        };\n    }, [query, debounceTime]);\n\n    return debouncedQuery;\n\n};","// extracted by mini-css-extract-plugin\nexport default {\"accordion\":\"Accordion_accordion__dQZA4\",\"accordion_title\":\"Accordion_accordion_title__mxaiX\",\"accordion_content\":\"Accordion_accordion_content__pWg2X\"};","\n\nimport React, { useState } from \"react\";\n\nimport s from \"./Accordion.module.css\";\n\nconst Accordion = ({ isOpen, title, content }) => {\n  const [isActive, setIsActive] = useState(isOpen ?? false);\n\n  return (\n    <div className={s.accordion}>\n      <div className={s.accordion_item}>\n        <div\n          className={s.accordion_title}\n          onClick={() => setIsActive(!isActive)}\n        >\n          <div>{title}</div>\n          <div>{isActive ? \"-\" : \"+\"}</div>\n        </div>\n        {isActive && <div className={s.accordion_content}>{content}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;","\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { GiphsSearch } from \"../../components/GiphsSearch/GiphsSearch\";\n\nimport * as GiphyAPI from \"../../Api/Giphy\";\nimport Accordion from \"../../components/Accordion/Accordion\";\n\n\nconst SearchGiphsPage = () => {\n    const [searchParams] = useSearchParams();\n    const [giphs, setGiphs] = useState([]);\n    const location = useLocation();\n    const isSearchOpen = location.state?.isSearchOpen;\n  \n    const query = searchParams.get(\"query\") ?? \"\";\n  \n    useEffect(() => {\n      GiphyAPI.getGiphsByQuery(query).then(setGiphs);\n    }, [query]);\n  \n    return (\n      <>\n        <Accordion\n          title={\"Search giphs from Giphy\"}\n          content={<GiphsSearch query={query} />}\n          isOpen={isSearchOpen}\n        />\n  \n        <ul>\n          {giphs.map((giph) => (\n            <li key={giph.id}>{giph.title}</li>\n          ))}\n        </ul>\n      </>\n    );\n  };\n  \n  export default SearchGiphsPage;"],"names":["GiphsSearch","query","useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchQuery","debouncedSearchQuery","debounceTime","debouncedQuery","setDebouncedQuery","timeoutRef","useRef","useEffect","current","setTimeout","clearTimeout","useDebounce","delete","placeholder","onChange","e","target","value","isOpen","title","content","isActive","setIsActive","className","s","onClick","giphs","setGiphs","isSearchOpen","useLocation","state","get","GiphyAPI","then","map","giph","id"],"sourceRoot":""}